MAXIMUM)
1. 
"LOW LEVEL" SOURCE
int a = RAM[0x80]
int b = RAM[0x81]
int max = a;
if (b > a) {
    max = b;
}
1)
0 R3 = RAM[0x80]
1 R4 = RAM[0x81]
2 R5 = R4
3 R6 = R4-R5
3 if (R6 > 0) goto 0x05
4 R5 = R3
5

1. ASSEMBY
0 LOAD R3, 0x80
1 LOAD R4, 0x81
2 ADD R5, R4, R0
3 SUB R6, R4, R5
3 JZG R6, 05
4 ADD R5, R3, R0
5

MACHINE
c380
c481
0540
1645
a605
0530

SUM)
1) 
"HIGH LEVEL" SOURCE
int sum(int length, int *array) {
0 int result = 0;
1 while (length > 0) {  // how much array left to read?
2 result += *array; // read an element from the array
3 array++;          // go to the next element
4 length--;         // bookkeeping
5    }
6    return result;
7 }

"LOW LEVEL" SOURCE
0 R1 = 0x01 // constant 1
1 R2 = 0x00 // result
2 R3 = RAM[0x80] // length
3 R4 = 0x81   // array pointer
4 if(R3<0) goto 0xb
5 R5 = R4 + R0 // prepare to dereference
6 R5 = RAM[R5] // dereference
7 R2 = R2 + R5 //read an element from the array
8 R4 = R4 + R1 //go to the next element
9 R3 = R3 - R1 //bookkeeping
10 if (R0==0) goto 0x04 //loop to beginning
11

ASSEMBLY
0 MOV R1, 0x01
1 MOV R2, 0x00
2 STOR R3, 0x80
3 MOV R4, 0x81
4 JZL R3, 0x0b
5 ADD R5, R4, R0
6 LOAD R5
7 ADD R2, R2, R5
8 ADD R4, R4, R1
9 SUB R3, R3, R1
10 JZE R0, 0x04
11

MACHINE
0 7101
1 7200
2 e380
3 7481
4 b30b
5 0540
6 d5xx
7 0225
8 0441
9 1331
10 8004

